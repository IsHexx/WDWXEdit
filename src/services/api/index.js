// Claude Code Update
/**
 * APIÊ®°ÂùóÁªü‰∏ÄÂÖ•Âè£
 * Êèê‰æõÊâÄÊúâAPIÁõ∏ÂÖ≥ÁöÑÁ±ª„ÄÅÁ±ªÂûãÂíåÂáΩÊï∞ÁöÑÁªü‰∏ÄÂØºÂá∫
 */
// === ÈÖçÁΩÆÁÆ°ÁêÜ ===
export { BACKEND_CONFIG, validateBackendConfig, getBackendConfigInfo, getApiEndpoint } from './backend-config';
// === HTTPÂÆ¢Êà∑Á´Ø ===
export { HttpClient } from './http-client';
// === ÂæÆ‰ø°API ===
export { WechatClient } from './wechat-api';
import { BACKEND_CONFIG, getBackendConfigInfo } from './backend-config';
import { HttpClient } from './http-client';
import { WechatClient } from './wechat-api';
// === ÂÖ®Â±ÄÂÆû‰æãÁÆ°ÁêÜ ===
let globalHttpClient = null;
let globalWechatClient = null;
/**
 * ÂàùÂßãÂåñHTTPÂÆ¢Êà∑Á´Ø
 * @param config HTTPÂÆ¢Êà∑Á´ØÈÖçÁΩÆ
 */
export function initHttpClient(config) {
    globalHttpClient = new HttpClient(config);
    console.log('üîß ÂÖ®Â±ÄHTTPÂÆ¢Êà∑Á´ØÂàùÂßãÂåñÊàêÂäü');
}
/**
 * ÂàùÂßãÂåñÂæÆ‰ø°ÂÆ¢Êà∑Á´Ø
 * @param httpClient HTTPÂÆ¢Êà∑Á´ØÂÆû‰æãÔºàÂèØÈÄâÔºåÂ¶ÇÊûúÊú™Êèê‰æõÂàô‰ΩøÁî®ÂÖ®Â±ÄÂÆû‰æãÔºâ
 */
export function initWechatClient(httpClient) {
    if (!httpClient && !globalHttpClient) {
        throw new Error('HTTPÂÆ¢Êà∑Á´ØÊú™ÂàùÂßãÂåñÔºåËØ∑ÂÖàË∞ÉÁî® initHttpClient() Êàñ‰º†ÂÖ• httpClient ÂèÇÊï∞');
    }
    globalWechatClient = new WechatClient(httpClient || globalHttpClient);
    console.log('üîß ÂÖ®Â±ÄÂæÆ‰ø°ÂÆ¢Êà∑Á´ØÂàùÂßãÂåñÊàêÂäü');
}
/**
 * Ëé∑ÂèñÂÖ®Â±ÄHTTPÂÆ¢Êà∑Á´ØÂÆû‰æã
 * @returns HTTPÂÆ¢Êà∑Á´ØÂÆû‰æã
 */
export function getHttpClient() {
    if (!globalHttpClient) {
        throw new Error('HTTPÂÆ¢Êà∑Á´ØÊú™ÂàùÂßãÂåñÔºåËØ∑ÂÖàË∞ÉÁî® initHttpClient()');
    }
    return globalHttpClient;
}
/**
 * Ëé∑ÂèñÂÖ®Â±ÄÂæÆ‰ø°ÂÆ¢Êà∑Á´ØÂÆû‰æã
 * @returns ÂæÆ‰ø°ÂÆ¢Êà∑Á´ØÂÆû‰æã
 */
export function getWechatClient() {
    if (!globalWechatClient) {
        throw new Error('ÂæÆ‰ø°ÂÆ¢Êà∑Á´ØÊú™ÂàùÂßãÂåñÔºåËØ∑ÂÖàË∞ÉÁî® initWechatClient()');
    }
    return globalWechatClient;
}
// === Â∑•ÂÖ∑ÂáΩÊï∞ ===
/**
 * Ê£ÄÊü•ÊòØÂê¶Â∫îËØ•‰ΩøÁî®ÂêéÁ´Ø‰ª£ÁêÜÊ®°Âºè
 * @returns ÊòØÂê¶‰ΩøÁî®ÂêéÁ´Ø‰ª£ÁêÜ
 */
export function shouldUseBackendProxy() {
    return BACKEND_CONFIG.USE_BACKEND_PROXY &&
        !!BACKEND_CONFIG.SERVER_URL &&
        !!BACKEND_CONFIG.API_KEY;
}
/**
 * Ëé∑ÂèñÂΩìÂâçAPIÊ®°ÂºèÊèèËø∞
 * @returns APIÊ®°ÂºèÊèèËø∞
 */
export function getApiMode() {
    return shouldUseBackendProxy()
        ? 'ÂêéÁ´Ø‰ª£ÁêÜÊ®°Âºè'
        : 'Áõ¥Êé•Ë∞ÉÁî®Ê®°Âºè(Â∑≤ÂºÉÁî®)';
}
// === Ë∞ÉËØïÂ∑•ÂÖ∑ ===
export const WechatApiUtils = {
    /**
     * Ê£ÄÊü•ÊòØÂê¶‰ΩøÁî®ÂêéÁ´Ø‰ª£ÁêÜ
     */
    shouldUseBackendProxy,
    /**
     * Ëé∑ÂèñAPIÊ®°ÂºèÊèèËø∞
     */
    getApiMode,
    /**
     * ÊµãËØïÂêéÁ´ØËøûÊé•
     */
    async testBackendConnection() {
        try {
            const client = getWechatClient();
            return await client.healthCheck();
        }
        catch (error) {
            console.error('ÂêéÁ´ØËøûÊé•ÊµãËØïÂ§±Ë¥•:', error);
            return false;
        }
    },
    /**
     * Ëé∑ÂèñÂΩìÂâçÈÖçÁΩÆ‰ø°ÊÅØ
     */
    getCurrentConfig() {
        return {
            proxyMode: shouldUseBackendProxy(),
            serverUrl: BACKEND_CONFIG.SERVER_URL,
            hasApiKey: !!BACKEND_CONFIG.API_KEY,
            httpClientInitialized: !!globalHttpClient,
            wechatClientInitialized: !!globalWechatClient,
            configInfo: getBackendConfigInfo()
        };
    }
};
// === ÂÖºÂÆπÊÄßÂáΩÊï∞ÂÆûÁé∞ ===
/**
 * Ëé∑ÂèñÂæÆ‰ø°TokenÔºàÂÖºÂÆπÊÄßÂáΩÊï∞ÁöÑÂÆûÈôÖÂÆûÁé∞Ôºâ
 */
export async function wxGetToken(appid, secret) {
    const client = getWechatClient();
    return await client.authenticate({ appId: appid, appSecret: secret });
}
/**
 * ‰∏ä‰º†ÂõæÁâáÂà∞ÂæÆ‰ø°ÔºàÂÖºÂÆπÊÄßÂáΩÊï∞ÁöÑÂÆûÈôÖÂÆûÁé∞Ôºâ
 */
export async function wxUploadImage(data, filename, token, type) {
    const client = getWechatClient();
    // BlobËΩ¨base64
    const base64Data = await new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = () => {
            const result = reader.result;
            const base64 = result.split(',')[1];
            resolve(base64);
        };
        reader.onerror = reject;
        reader.readAsDataURL(data);
    });
    return await client.uploadMedia({
        mediaData: base64Data,
        filename,
        accessToken: token,
        storageType: type === 'image' ? 'permanent' : 'temporary'
    });
}
/**
 * Ê∑ªÂä†ËçâÁ®øÔºàÂÖºÂÆπÊÄßÂáΩÊï∞ÁöÑÂÆûÈôÖÂÆûÁé∞Ôºâ
 */
export async function wxAddDraft(articles, token) {
    const client = getWechatClient();
    return await client.createDraft(articles, token);
}
// === ‰æøÊç∑ÂàùÂßãÂåñÂáΩÊï∞ ===
/**
 * ‰∏ÄÈîÆÂàùÂßãÂåñAPIÂÆ¢Êà∑Á´Ø
 * ‰ΩøÁî®ÈªòËÆ§ÈÖçÁΩÆÂàùÂßãÂåñHTTPÂÆ¢Êà∑Á´ØÂíåÂæÆ‰ø°ÂÆ¢Êà∑Á´Ø
 */
export function initApiClients() {
    // ÂàùÂßãÂåñHTTPÂÆ¢Êà∑Á´Ø
    initHttpClient({
        baseUrl: BACKEND_CONFIG.SERVER_URL,
        apiKey: BACKEND_CONFIG.API_KEY,
        timeout: BACKEND_CONFIG.TIMEOUT,
        retries: BACKEND_CONFIG.MAX_RETRIES
    });
    // ÂàùÂßãÂåñÂæÆ‰ø°ÂÆ¢Êà∑Á´Ø
    initWechatClient();
    console.log('üéâ APIÂÆ¢Êà∑Á´Ø‰∏ÄÈîÆÂàùÂßãÂåñÂÆåÊàê');
}
// === ÂêØÂä®Êó∂Êó•Âøó ===
console.log(`üîó ÂæÆ‰ø°APIÊ®°Âºè: ${getApiMode()}`);
// === Âà´ÂêçÂáΩÊï∞ÔºàÂÖºÂÆπÊÄßÔºâ ===
/**
 * Ëé∑ÂèñÂèëÂ∏ÉÂÆ¢Êà∑Á´ØÔºàÂà´ÂêçÂáΩÊï∞Ôºâ
 * @returns ÂæÆ‰ø°ÂÆ¢Êà∑Á´ØÂÆû‰æã
 */
export function getPublisherClient() {
    return getWechatClient();
}
//# sourceMappingURL=data:application/json;base64,